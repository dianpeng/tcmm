
/**
 * x64 code generation for expression.
 *
 * The code generator for expression has a better optimization due to the fact that we compile
 * the expression into AST so we could apply a slightly better code generator for it instead of
 * the normal full code generation.
 *
 * 1) RBX registers is reserved internally to hold context object and it is callee saved
 *
 * 2) RDI registers is reserved to hold the result of the whole expression tree. So a call to
 *    ExprCodeGen will assume output be held inside of RDI
 *
 * 3) RSP registers is reserved to point to the stack and RBP are used to hold the frame pointer
 *
 * 4) RSI,RCX,RDX,RAX,R8-R15 are used as scratch registers , if not enough then spill on the stack
 *
 * 5) Call a script side function will use stack to pass argument
 *
 */
